# Stage
stages:

  # In this stage, first step is splitting the data
  data_split:

    # cmd to execute this file
    cmd: python src/data_split.py

    # this step is depends on data_split python script
    deps:
    - src/data_split.py

    # What all parameters are used to execute the variables this file has
    params:
    - base.random_state
    - data_source.data_path
    - split.split_ratio

    # what output we are expecting, a folder named split where train.csv and test.csv is saved
    outs:   
    - data/split
  
  # This step is processing, here we are just encoding label (for simplicity) as our focus is DVC
  data_process:
    
    # cmd to execute this step
    cmd: python src/data_process.py

    # This file depends on data from split directory, because we need to process the split data
    # which is in split directory --> train.csv, test.csv
    # also it depends on data_process python script
    deps:
    - data/split
    - src/data_process.py

    # parameters used in this step and for processing
    params:

    # directory for saving processed data
    - process.dir

    # saving the processed train data to defined processed test path
    - process.test_file

    # saving the processed train data to defined processed train path
    - process.train_file

    # data from split directory
    - split.dir
    - split.train_file
    - split.test_file

    # output we need 
    outs:
    - data/processed 
  
  # train step
  train:
  
    cmd: python src/train.py data/features model/rf_model_1.pkl
    deps:
    - data/processed
    - src/train.py
    params:
    - base.random_state
    - base.target_col
    - model_dir
    - process.dir
    - process.train_file
    - process.test_file
    - train.n_est
    outs:
    - model/rf_model_1.pkl

#   evaluate:
#     cmd: python src/evaluate.py model/rf_model_1.pkl dvc/data/processed
#     deps:
#     - data/processed
#     - model/rf_model_1.pkl
#     - src/evaluate.py
#     outs:
#     - eval/importance.png
#     - eval/live/plots:
#         cache: false
#     # - eval/precision:
#     #     cache: false
#     metrics:
#     - eval/live/metrics.json:
#         cache: false

# plots:
#   - Confusion Matrix:
#       template: confusion
#       # actual y
#       x: actual
#       # predicted y
#       y:
#         eval/live/plots/sklearn/cm/train.json: predicted
#         eval/live/plots/sklearn/cm/test.json: predicted
#   - eval/importance.png